// <auto-generated />
using System;
using DigitalArs_copia.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DigitalArs_copia.Migrations
{
    [DbContext(typeof(ContextDB))]
    [Migration("20231212011753_mg3")]
    partial class mg3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.24")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DigitalArs_copia.Entities.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("account_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("creation_date");

                    b.Property<bool>("IsBlocked")
                        .HasColumnType("bit")
                        .HasColumnName("is_blocked");

                    b.Property<float>("Money")
                        .HasColumnType("REAL")
                        .HasColumnName("money");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("accounts");
                });

            modelBuilder.Entity("DigitalArs_copia.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("role_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("role_description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("role_name");

                    b.HasKey("Id");

                    b.ToTable("roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Administrator",
                            Name = "Administrator"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Consultant",
                            Name = "Consultant"
                        });
                });

            modelBuilder.Entity("DigitalArs_copia.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("user_email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("user_firstName");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("user_lastName");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("user_password");

                    b.Property<int>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("role_id");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "adm@gmail.com",
                            FirstName = "Pablo",
                            IsActive = true,
                            LastName = "Ortiz",
                            Password = "9f3d321cd0a1ccafa899226d5190f74618cb23b789aa998e1d7f741956132434",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 2,
                            Email = "noadm@gmail.com",
                            FirstName = "Kevin",
                            IsActive = true,
                            LastName = "Johnson",
                            Password = "a10ad3a74bccd29b56cb5ec5a213d1a27b293b6bb88797418a31f09c2a707bf4",
                            RoleId = 2
                        },
                        new
                        {
                            Id = 3,
                            Email = "bob@example.com",
                            FirstName = "Bob",
                            IsActive = true,
                            LastName = "Smith",
                            Password = "a10ad3a74bccd29b56cb5ec5a213d1a27b293b6bb88797418a31f09c2a707bf4",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 4,
                            Email = "eva@example.com",
                            FirstName = "Eva",
                            IsActive = true,
                            LastName = "Lee",
                            Password = "ff192a780cb98e260d87c38683c2e155dfe48897e454e47390063fd76755651f",
                            RoleId = 2
                        },
                        new
                        {
                            Id = 5,
                            Email = "john@example.com",
                            FirstName = "John",
                            IsActive = true,
                            LastName = "Doe",
                            Password = "fbafa90f00f6416a6d1e8535234f9603aaf07258d7a98424ec011a5f7aa634ff",
                            RoleId = 2
                        });
                });

            modelBuilder.Entity("DigitalArs_copia.Entities.Account", b =>
                {
                    b.HasOne("DigitalArs_copia.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DigitalArs_copia.Entities.User", b =>
                {
                    b.HasOne("DigitalArs_copia.Entities.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });
#pragma warning restore 612, 618
        }
    }
}
